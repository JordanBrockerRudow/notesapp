swagger: '2.0'
info:
  title: Notesapp API
  description: API for Notesapp Notes
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Token:
    type: apiKey
    name: Authorization
    in: header
  Basic:
    type: basic
security:
  - Basic: []
  - Token: []
paths:
  /jwt/:
    post:
      operationId: jwt_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - jwt
    parameters: []
  /jwt/refresh/:
    post:
      operationId: jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - jwt
    parameters: []
  /posts/:
    get:
      operationId: posts_list
      description: ''
      parameters:
        - name: author
          in: query
          description: ''
          required: false
          type: string
        - name: tags
          in: query
          description: ''
          required: false
          type: string
        - name: published_from
          in: query
          description: ''
          required: false
          type: string
        - name: published_to
          in: query
          description: ''
          required: false
          type: string
        - name: author_email
          in: query
          description: ''
          required: false
          type: string
        - name: summary
          in: query
          description: ''
          required: false
          type: string
        - name: content
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'
      tags:
        - posts
    post:
      operationId: posts_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Post'
      tags:
        - posts
    parameters: []
  /posts/by-time/{period_name}/:
    get:
      operationId: posts_by-time_list
      description: ''
      parameters:
        - name: author
          in: query
          description: ''
          required: false
          type: string
        - name: tags
          in: query
          description: ''
          required: false
          type: string
        - name: published_from
          in: query
          description: ''
          required: false
          type: string
        - name: published_to
          in: query
          description: ''
          required: false
          type: string
        - name: author_email
          in: query
          description: ''
          required: false
          type: string
        - name: summary
          in: query
          description: ''
          required: false
          type: string
        - name: content
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'
      tags:
        - posts
    parameters:
      - name: period_name
        in: path
        required: true
        type: string
  /posts/mine/:
    get:
      operationId: posts_mine_read
      description: ''
      parameters:
        - name: author
          in: query
          description: ''
          required: false
          type: string
        - name: tags
          in: query
          description: ''
          required: false
          type: string
        - name: published_from
          in: query
          description: ''
          required: false
          type: string
        - name: published_to
          in: query
          description: ''
          required: false
          type: string
        - name: author_email
          in: query
          description: ''
          required: false
          type: string
        - name: summary
          in: query
          description: ''
          required: false
          type: string
        - name: content
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/PostDetail'
      tags:
        - posts
    parameters: []
  /posts/{id}/:
    get:
      operationId: posts_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PostDetail'
      tags:
        - posts
    put:
      operationId: posts_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PostDetail'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PostDetail'
      tags:
        - posts
    patch:
      operationId: posts_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PostDetail'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PostDetail'
      tags:
        - posts
    delete:
      operationId: posts_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - posts
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this post.
        required: true
        type: integer
  /tags/:
    get:
      operationId: tags_list
      description: ''
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Tag'
      tags:
        - tags
    post:
      operationId: tags_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tags
    parameters: []
  /tags/{id}/:
    get:
      operationId: tags_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tags
    put:
      operationId: tags_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tags
    patch:
      operationId: tags_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tags
    delete:
      operationId: tags_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - tags
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this tag.
        required: true
        type: integer
  /tags/{id}/posts/:
    get:
      operationId: tags_posts
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tags
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this tag.
        required: true
        type: integer
  /token-auth/:
    post:
      operationId: token-auth_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthToken'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AuthToken'
      tags:
        - token-auth
    parameters: []
  /users/{email}:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters:
      - name: email
        in: path
        required: true
        type: string
  /users/{email}{format}:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters:
      - name: email
        in: path
        required: true
        type: string
      - name: format
        in: path
        required: true
        type: string
definitions:
  TokenObtainPair:
    required:
      - email
      - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
  Post:
    required:
      - tags
      - author
      - title
      - slug
      - summary
      - content
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      hero_image:
        title: Hero image
        type: string
        readOnly: true
        format: uri
      tags:
        type: array
        items:
          type: string
        uniqueItems: true
      author:
        title: Author
        type: string
        format: uri
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      modified_at:
        title: Modified at
        type: string
        format: date-time
        readOnly: true
      published_at:
        title: Published at
        type: string
        format: date-time
        x-nullable: true
      title:
        title: Title
        type: string
        maxLength: 100
        minLength: 1
      slug:
        title: Slug
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        maxLength: 50
        minLength: 1
      summary:
        title: Summary
        type: string
        maxLength: 500
        minLength: 1
      content:
        title: Content
        type: string
        minLength: 1
  User:
    required:
      - email
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
        minLength: 1
  Comment:
    required:
      - content
    type: object
    properties:
      id:
        title: Id
        type: integer
      creator:
        $ref: '#/definitions/User'
      content:
        title: Content
        type: string
        minLength: 1
      modified_at:
        title: Modified at
        type: string
        format: date-time
        readOnly: true
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
  PostDetail:
    required:
      - tags
      - author
      - comments
      - title
      - slug
      - summary
      - content
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      hero_image:
        title: Hero image
        type: string
        readOnly: true
        format: uri
      tags:
        type: array
        items:
          type: string
        uniqueItems: true
      author:
        title: Author
        type: string
        format: uri
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      modified_at:
        title: Modified at
        type: string
        format: date-time
        readOnly: true
      published_at:
        title: Published at
        type: string
        format: date-time
        x-nullable: true
      title:
        title: Title
        type: string
        maxLength: 100
        minLength: 1
      slug:
        title: Slug
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        maxLength: 50
        minLength: 1
      summary:
        title: Summary
        type: string
        maxLength: 500
        minLength: 1
      content:
        title: Content
        type: string
        minLength: 1
  Tag:
    required:
      - value
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      value:
        title: Value
        type: string
        maxLength: 100
        minLength: 1
  AuthToken:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        readOnly: true
        minLength: 1
